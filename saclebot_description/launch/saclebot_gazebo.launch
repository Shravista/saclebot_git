<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <!--<include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="paused" value="false" />
    </include>-->
    
	<!-- urdf spawner-->
	<arg name="x" value="-1.0" />
    <arg name="y" value="-1.0" />
    <arg name="z" value="0.10" />
    <arg name="urdf_robot_file" value="$(find saclebot_description)/urdf/saclebot_description.urdf"/>
	<param name="robot_description" command="cat $(arg urdf_robot_file)" />
	
	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -x $(arg x) -y $(arg y) -z $(arg z)  -model saclebot -param robot_description"/>
    
    <!-- controller-->
    <rosparam file="$(find saclebot_description)/config/pos_ctrlr.yaml" command="load" />

    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" args="joint_state_controller
                              frontLeftWheel_joint_position_controller frontRightWheel_joint_position_controller rearLeftWheel_joint_position_controller 
                              rearRightWheel_joint_position_controller shoulder_joint_position_controller slider_joint_position_controller R1_joint_position_controller
                              R2_joint_position_controller R3_joint_position_controller left_act_joint_position_controller camera_head_joint_position_controller 
                              mop_joint_position_controller">
    </node>
    
    
    <!-- tf-->
    
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen" >
    </node>
    
    <!-- **************************************** Service for relocating the robot **************************************************************************************--> 
    <node name="saclebot_relocate" type="relocate_robot.py" pkg="saclebot_description" output="screen"/>       
    
</launch>
